#!/usr/bin/env python

import contextlib
import fnmatch
import glob
import os
import shutil
import subprocess


DSTDIR = "./tmp"

def cleanrice(directory):
    for root, dirs, files in os.walk(directory):
        for basename in files:
            if basename.endswith("rice-box.go"):
                    filename = os.path.join(root, basename)
                    print "\t", filename
                    os.unlink(filename)


@contextlib.contextmanager
def chdir(newdir):
    curdir = os.getcwd()
    try:
        os.chdir(newdir)
        yield
    finally:
        os.chdir(curdir)


def version():
    print "Installing locally"
    subprocess.call(["go", "install", "./cmd/devd"])
    p = subprocess.Popen(["devd", "--version"], stderr=subprocess.PIPE)
    return p.communicate()[1].strip()


ARCHS = [
    ("darwin", "amd64", "osx64"),
    ("windows", "amd64", "windows64"),
    ("linux", "amd64", "linux64"),
    ("linux", "arm", "linuxARM"),
]


def build(vers, goos, goarch, name):
    dst = os.path.join(DSTDIR, "devd-%s-%s"%(vers, name))
    for f in glob.glob(dst + "*"):
        if os.path.isdir(f):
            shutil.rmtree(f)
        else:
            os.unlink(f)
    os.makedirs(dst)
    env = os.environ.copy()
    env["GOOS"] = goos
    env["GOARCH"] = goarch
    subprocess.call(
        [
            "go", "build",
            "-o", os.path.join(dst, "devd"),
            "./cmd/devd"
        ],
        env = env
    )
    subprocess.call(["tar", "-czvf", dst + ".tgz", dst])


def main():
    print "Making static inclusions..."
    subprocess.call(["rice", "embed-go"])
    with chdir("livereload"):
        subprocess.call(["rice", "embed-go"])

    v = version()
    print "Version is: ", v

    for i in ARCHS:
        build(v, i[0], i[1], i[2])

    print "Cleaning static inclusions..."
    cleanrice(".")


main()
